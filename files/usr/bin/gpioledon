#!/bin/bash

# GPIO Wrapper (multi-pin support)
# by Lutfa Ilham
# v1.1

if [ "$(id -u)" != "0" ]; then
  echo "This script must be run as root" 1>&2
  exit 1
fi

GPIO="/sys/class/gpio"

function multi_gpio() {
  # parameter 1 = action (on/off/warn/dis)
  # parameter 2 = daftar pin untuk 'on' (dipisah spasi)
  # parameter 3 = daftar pin untuk 'off' (dipisah spasi)

  action="${1}"
  pins_on=($2)
  pins_off=($3)

  # Export dan set direction out untuk semua pin ON
  for pin in "${pins_on[@]}"; do
    if [ ! -d "${GPIO}/gpio${pin}" ]; then
      echo "${pin}" > "${GPIO}/export"
      sleep 0.5
    fi
    echo out > "${GPIO}/gpio${pin}/direction"
  done

  # Export dan set direction out untuk semua pin OFF
  for pin in "${pins_off[@]}"; do
    if [ ! -d "${GPIO}/gpio${pin}" ]; then
      echo "${pin}" > "${GPIO}/export"
      sleep 0.5
    fi
    echo out > "${GPIO}/gpio${pin}/direction"
  done

  case "${action}" in
    "on")
      for pin in "${pins_on[@]}"; do
        echo 1 > "${GPIO}/gpio${pin}/value"
      done
      for pin in "${pins_off[@]}"; do
        echo 0 > "${GPIO}/gpio${pin}/value"
      done
      ;;
    "off")
      for pin in "${pins_on[@]}"; do
        echo 0 > "${GPIO}/gpio${pin}/value"
      done
      for pin in "${pins_off[@]}"; do
        echo 1 > "${GPIO}/gpio${pin}/value"
      done
      ;;
    "warn")
      for pin in "${pins_on[@]}"; do
        echo 1 > "${GPIO}/gpio${pin}/value"
      done
      for pin in "${pins_off[@]}"; do
        echo 1 > "${GPIO}/gpio${pin}/value"
      done
      ;;
    "dis")
      for pin in "${pins_on[@]}"; do
        echo 0 > "${GPIO}/gpio${pin}/value"
      done
      for pin in "${pins_off[@]}"; do
        echo 0 > "${GPIO}/gpio${pin}/value"
      done
      ;;
    *)
      echo "Unknown action: ${action}"
      ;;
  esac
}

function power() {
  # Contoh: 2 pin ON, 2 pin OFF
  pins_on="510 511"
  pins_off="506 507"
  multi_gpio "${1}" "${pins_on}" "${pins_off}"
}

function lan() {
  # Contoh juga multi pin
  pins_on="425 427"
  pins_off="426 428"
  multi_gpio "${1}" "${pins_on}" "${pins_off}"
}

function usb() {
  pin_usb="505"
  if [ ! -d "${GPIO}/gpio${pin_usb}" ]; then
    echo "${pin_usb}" > "${GPIO}/export"
    sleep 0.1
  fi
  echo out > "${GPIO}/gpio${pin_usb}/direction"

  case "${1}" in
    "reset")
      echo 0 > "${GPIO}/gpio${pin_usb}/value"
      sleep 1
      echo 1 > "${GPIO}/gpio${pin_usb}/value"
      ;;
    *)
      echo "Invalid usb command: ${1}"
      ;;
  esac
}

function usage() {
  cat <<EOF
Usage:
  $0 -power  [on, off, warn, dis]
  $0 -lan    [on, off, warn, dis]
  $0 -usb    [reset]

Note:
  - Power and LAN commands support multi-pin control internally.
EOF
}

case "${1}" in
  -power)
    power "${2}"
    ;;
  -lan)
    lan "${2}"
    ;;
  -usb)
    usb "${2}"
    ;;
  *)
    usage
    ;;
esac